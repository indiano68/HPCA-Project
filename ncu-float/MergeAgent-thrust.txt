==PROF== Connected to process 69684 (/ceph/hpc/home/student3/HPCA/HPCA-Project/build/build/executable_window)
Number of devices: 1
Device Number: 0
  Device name: NVIDIA A100-SXM4-40GB
  Memory Clock Rate (MHz): 1186
  Memory Bus Width (bits): 5120
  Peak Memory Bandwidth (GB/s): 1555.2
  Total global memory (Gbytes) 39.5
  Shared memory per block (Kbytes) 48.0
  minor-major: 0-8
  Warp-size: 32
  Concurrent kernels: yes
  Concurrent computation/communication: yes

Size A: 300000000 | Size B: 300000000
---------------------------------
==PROF== Profiling "_kernel_agent": 0%
==WARNING== Backing up device memory in system memory. Kernel replay might be slow. Consider using "--replay-mode application" to avoid memory save-and-restore.
....50%....100% - 47 passes
==PROF== Profiling "_kernel_agent": 0%....50%....100% - 47 passes
==PROF== Profiling "_kernel_agent": 0%....50%....100% - 47 passes
WINDOW: PASS
TILED : PASS
NAIVE : PASS
---------------------------------
Time Thrust: 13179.5
Time window: 13.141 | Partition T 0.637952
Time tiled : 8.0599 | Partition T 0.495616
Time naive : 66.7351
==PROF== Disconnected from process 69684
[69684] executable_window@127.0.0.1
void _kernel_agent<__merge::MergeAgent<device_ptr<double>, device_ptr<double>, double *, double *, long, detail::normal_iterator<device_ptr<double>>, double *, less<double>, detail::integral_constant<bool, 0>>, device_ptr<double>, device_ptr<double>, double *, double *, long, long, detail::normal_iterator<device_ptr<double>>, double *, less<double>, long *>(T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) (167411, 1, 1)x(512, 1, 1), Context 1, Stream 7, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.21
    SM Frequency                    Ghz         1.09
    Elapsed Cycles                cycle    8,150,074
    Memory Throughput                 %        82.82
    DRAM Throughput                   %        82.82
    Duration                         ms         7.44
    L1/TEX Cache Throughput           %        71.14
    L2 Cache Throughput               %        65.21
    SM Active Cycles              cycle 8,143,060.91
    Compute (SM) Throughput           %        32.93
    ----------------------- ----------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing DRAM in the Memory Workload Analysis section.                                              

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.93
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle      320,000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         1.23
    Executed Ipc Elapsed  inst/cycle         1.23
    Issue Slots Busy               %        30.79
    Issued Ipc Active     inst/cycle         1.23
    SM Busy                        %        32.96
    -------------------- ----------- ------------

    INF   ALU is the highest-utilized pipeline (33.0%) based on active cycles, taking into account the rates of its     
          different instructions. It executes integer and logic operations. It is well-utilized, but should not be a    
          bottleneck.                                                                                                   

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Tbyte/s         1.29
    Mem Busy                              %        71.08
    Max Bandwidth                         %        82.82
    L1/TEX Hit Rate                       %         6.16
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        63.89
    Mem Pipes Busy                        %        22.26
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 7.783%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 28.5 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 35.25%                                                                                          
          The memory access pattern for shared loads might not be optimal and causes on average a 4.0 - way bank        
          conflict across all 110183320 shared load requests.This results in 218067953 bank conflicts,  which           
          represent 49.55% of the overall 440111219 wavefronts for shared loads. Check the Source Counters section for  
          uncoalesced shared loads.                                                                                     

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        30.79
    Issued Warp Per Scheduler                        0.31
    No Eligible                            %        69.21
    Active Warps Per Scheduler          warp         7.57
    Eligible Warps Per Scheduler        warp         0.84
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 17.18%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 3.2 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of   
          7.57 active warps per scheduler, but only an average of 0.84 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        24.60
    Warp Cycles Per Executed Instruction           cycle        24.60
    Avg. Active Threads Per Warp                                31.31
    Avg. Not Predicated Off Threads Per Warp                    28.55
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 17.18%                                                                                          
          On average, each warp of this kernel spends 9.9 cycles being stalled waiting for a scoreboard dependency on a 
          L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon  
          to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory      
          access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing    
          data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to   
          shared memory. This stall type represents about 40.0% of the total average of 24.6 cycles between issuing     
          two instructions.                                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- -------------
    Metric Name                              Metric Unit  Metric Value
    ---------------------------------------- ----------- -------------
    Avg. Executed Instructions Per Scheduler        inst  2,507,532.08
    Executed Instructions                           inst 1,083,253,859
    Avg. Issued Instructions Per Scheduler          inst  2,507,609.67
    Issued Instructions                             inst 1,083,287,379
    ---------------------------------------- ----------- -------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   512
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                167,411
    Registers Per Thread             register/thread              46
    Shared Memory Configuration Size           Kbyte          102.40
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block      Kbyte/block           28.69
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM             108
    Threads                                   thread      85,714,432
    Uses Green Context                                             0
    Waves Per SM                                              775.05
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            2
    Block Limit Shared Mem                block            3
    Block Limit Warps                     block            4
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        47.43
    Achieved Active Warps Per SM           warp        30.35
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 17.18%                                                                                          
          The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of required      
          registers.                                                                                                    

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- -------------
    Metric Name                Metric Unit  Metric Value
    -------------------------- ----------- -------------
    Average DRAM Active Cycles       cycle  7,489,719.90
    Total DRAM Elapsed Cycles        cycle   361,734,144
    Average L1 Active Cycles         cycle  8,143,060.91
    Total L1 Elapsed Cycles          cycle   880,106,818
    Average L2 Active Cycles         cycle  7,805,682.36
    Total L2 Elapsed Cycles          cycle   625,220,560
    Average SM Active Cycles         cycle  8,143,060.91
    Total SM Elapsed Cycles          cycle   880,106,818
    Average SMSP Active Cycles       cycle  8,145,196.92
    Total SMSP Elapsed Cycles        cycle 3,520,427,272
    -------------------------- ----------- -------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.04
    Branch Instructions              inst   42,158,392
    Branch Efficiency                   %        86.15
    Avg. Divergent Branches                  10,363.97
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 4.442%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 14213010 excessive sectors (4% of the     
          total 319570163 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source      
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 46.49%                                                                                          
          This kernel has uncoalesced shared accesses resulting in a total of 237739797 excessive wavefronts (47% of    
          the total 510984799 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source        
          locations. The CUDA Best Practices Guide                                                                      
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -ab) has an example on optimizing shared memory accesses.                                                     

