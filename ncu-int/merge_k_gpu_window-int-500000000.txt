==PROF== Connected to process 2256285 (/ceph/hpc/home/student3/HPCA/HPCA-Project/build/executable_cuda)
==PROF== Profiling "merge_k_gpu_window": 0%
==WARNING== Backing up device memory in system memory. Kernel replay might be slow. Consider using "--replay-mode application" to avoid memory save-and-restore.
....50%....100% - 47 passes
Number of devices: 1
Device Number: 0
  Device name: NVIDIA A100-SXM4-40GB
  Memory Clock Rate (MHz): 1186
  Memory Bus Width (bits): 5120
  Peak Memory Bandwidth (GB/s): 1555.2
  Total global memory (Gbytes) 39.4
  Shared memory per block (Kbytes) 48.0
  minor-major: 0-8
  Warp-size: 32
  Concurrent kernels: yes
  Concurrent computation/communication: yes

Equality Erik     mergeLarge    : False T 0 | Partition T 0
Equality Triangle mergeLarge    : False T 0.004992
Equality Squares  mergeLarge    : True T 12080.7 | Partition T 0.862208
Equality thrust   merge         : True T 6.7113
==PROF== Disconnected from process 2256285
[2256285] executable_cuda@127.0.0.1
  void merge_k_gpu_window<int>(const T1 *, unsigned long, const T1 *, unsigned long, T1 *, const int2 *) (162761, 1, 1)x(512, 1, 1), Context 1, Stream 7, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         1.21
    SM Frequency            cycle/nsecond         1.09
    Elapsed Cycles                  cycle    6,486,408
    Memory Throughput                   %        86.69
    DRAM Throughput                     %        86.69
    Duration                      msecond         5.92
    L1/TEX Cache Throughput             %        33.89
    L2 Cache Throughput                 %        69.60
    SM Active Cycles                cycle 6,464,779.19
    Compute (SM) Throughput             %        73.97
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing DRAM in the Memory Workload Analysis section.                                              

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.87
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle      640,000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         2.97
    Executed Ipc Elapsed  inst/cycle         2.96
    Issue Slots Busy               %        74.21
    Issued Ipc Active     inst/cycle         2.97
    SM Busy                        %        74.21
    -------------------- ----------- ------------

    INF   ALU is the highest-utilized pipeline (53.3%) based on active cycles, taking into account the rates of its     
          different instructions. It executes integer and logic operations. It is well-utilized, but should not be a    
          bottleneck.                                                                                                   

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Tbyte/second         1.35
    Mem Busy                               %        34.56
    Max Bandwidth                          %        86.69
    L1/TEX Hit Rate                        %        11.87
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        65.35
    Mem Pipes Busy                         %        30.01
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 12.46%                                                                                          
          The memory access pattern for global loads from DRAM might not be optimal. On average, only 25.6 of the 32    
          bytes transmitted per sector are utilized by each thread. This applies to the 92.3% of sectors missed in L2.  
          This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced  
          global loads.                                                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 0.001956%                                                                                       
          The memory access pattern for global stores to L2 might not be optimal. On average, only 32.0 of the 32 bytes 
          transmitted per sector are utilized by each thread. This applies to the 100.0% of sectors missed in L1TEX.    
          This could possibly be caused by a stride between threads. Check the Source Counters section for uncoalesced  
          global stores.                                                                                                

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        74.24
    Issued Warp Per Scheduler                        0.74
    No Eligible                            %        25.76
    Active Warps Per Scheduler          warp        15.73
    Eligible Warps Per Scheduler        warp         3.23
    ---------------------------- ----------- ------------

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        21.19
    Warp Cycles Per Executed Instruction           cycle        21.19
    Avg. Active Threads Per Warp                                31.95
    Avg. Not Predicated Off Threads Per Warp                    30.08
    ---------------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 39.35%                                                                                    
          On average, each warp of this kernel spends 8.3 cycles being stalled waiting for a scoreboard dependency on a 
          L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon  
          to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory      
          access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing    
          data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to   
          shared memory. This stall type represents about 39.4% of the total average of 21.2 cycles between issuing     
          two instructions.                                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- -------------
    Metric Name                              Metric Unit  Metric Value
    ---------------------------------------- ----------- -------------
    Avg. Executed Instructions Per Scheduler        inst  4,797,038.84
    Executed Instructions                           inst 2,072,320,777
    Avg. Issued Instructions Per Scheduler          inst  4,797,586.47
    Issued Instructions                             inst 2,072,557,353
    ---------------------------------------- ----------- -------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   512
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                162,761
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte          135.17
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block           24.59
    # SMs                                         SM             108
    Threads                                   thread      83,333,632
    Uses Green Context                                             0
    Waves Per SM                                              376.76
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            4
    Block Limit Shared Mem                block            5
    Block Limit Warps                     block            4
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        98.40
    Achieved Active Warps Per SM           warp        62.98
    ------------------------------- ----------- ------------

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- -------------
    Metric Name                Metric Unit  Metric Value
    -------------------------- ----------- -------------
    Average DRAM Active Cycles       cycle  6,239,440.10
    Total DRAM Elapsed Cycles        cycle   287,896,064
    Average L1 Active Cycles         cycle  6,464,779.19
    Total L1 Elapsed Cycles          cycle   700,497,770
    Average L2 Active Cycles         cycle  6,201,091.26
    Total L2 Elapsed Cycles          cycle   497,593,840
    Average SM Active Cycles         cycle  6,464,779.19
    Total SM Elapsed Cycles          cycle   700,497,770
    Average SMSP Active Cycles       cycle  6,462,410.87
    Total SMSP Elapsed Cycles        cycle 2,801,991,080
    -------------------------- ----------- -------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.18
    Branch Instructions              inst  371,364,782
    Branch Efficiency                   %        99.89
    Avg. Divergent Branches                     557.69
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 9.72%                                                                                           
          This kernel has uncoalesced global accesses resulting in a total of 27570137 excessive sectors (10% of the    
          total 282785501 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source      
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   

